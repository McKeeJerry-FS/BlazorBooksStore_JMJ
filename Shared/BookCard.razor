@inject NavigationManager Navigation

<div style="@BackgroundStyle" @attributes="UserAttributes" class="card" @onclick="NavigateToBookDetails">
    <h6>@Book?.Title</h6>
    <p>Author: @Book?.AuthorName</p>
    <p>Publishing Date: @Book?.PublishingDate</p>

    @if (WithButton)
    {
        <AuthorizeView>
            <Authorized>
                <button class="main-button" @onclick="AddToCart" @onclick:stopPropagation>Add to Cart</button>
            </Authorized>
            <NotAuthorized>
                <p class="text-center">Books only for sale in the UK at this time...</p>
            </NotAuthorized>
        </AuthorizeView>
    }
</div>

@code{
    private string _oldBookId = string.Empty;
    private bool _shouldRerender = false;


    [Parameter]
    [EditorRequired] // This attribute makes the Parameter required
    public Book? Book { get; set; }

    [Parameter]
    public bool WithButton { get; set; } = true;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? UserAttributes { get; set; }

    [Parameter]
    public EventCallback<Book?> OnAddToCartClicked { get; set; }

    [CascadingParameter(Name = "BackgroundStyle")]
    public string? BackgroundStyle { get; set; }

    [CascadingParameter(Name = "ButtonStyle")]
    public string? ButtonStyle { get; set; }

    [CascadingParameter]
    public bool IsBusy { get; set; }

    private async Task AddToCart()
    {
        await OnAddToCartClicked.InvokeAsync(Book);
    }

    private void NavigateToBookDetails()
    {
        var url = $"/book/{Book?.Id}";
        Navigation.NavigateTo(url);
    }

    protected override void OnParametersSet()
    {
        if (Book == null) throw new ArgumentNullException(nameof(Book));
        if(Book.Id.Equals(_oldBookId)){
            _oldBookId = Book.Id;
            _shouldRerender = true;
        }
        else
        {
            _shouldRerender = false;
        }
    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"BookCard rendered for Book: {Book?.Title}");
    }
}
